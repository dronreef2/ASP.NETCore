apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tutor-copiloto-ingress
  namespace: tutor-copiloto
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    # WebSocket support para streaming
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # CORS
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://tutor-copiloto.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
    # Security headers
    nginx.ingress.kubernetes.io/custom-http-errors: "404,503"
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - tutor-copiloto.com
    - api.tutor-copiloto.com
    secretName: tutor-copiloto-tls
  rules:
  # Frontend SPA
  - host: tutor-copiloto.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-spa-service
            port:
              number: 80
  # API Backend
  - host: api.tutor-copiloto.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: orchestrator-service
            port:
              number: 80
  # Fallback - pode também rotear API por path
  - host: tutor-copiloto.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: orchestrator-service
            port:
              number: 80
---
# HorizontalPodAutoscaler para o orchestrator
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: orchestrator-hpa
  namespace: tutor-copiloto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: orchestrator
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
# PodDisruptionBudget para alta disponibilidade
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: orchestrator-pdb
  namespace: tutor-copiloto
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: orchestrator
---
# NetworkPolicy para segurança
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tutor-copiloto-netpol
  namespace: tutor-copiloto
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Permite ingress do nginx-ingress
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
  # Permite comunicação interna entre pods
  - from:
    - namespaceSelector:
        matchLabels:
          name: tutor-copiloto
  egress:
  # Permite DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Permite comunicação interna
  - to:
    - namespaceSelector:
        matchLabels:
          name: tutor-copiloto
  # Permite HTTPS para APIs externas (Anthropic)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Permite Redis
  - to:
    - namespaceSelector:
        matchLabels:
          name: tutor-copiloto
    ports:
    - protocol: TCP
      port: 6379
