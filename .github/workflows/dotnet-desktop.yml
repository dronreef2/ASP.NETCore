# .github/workflows/dotnet-ci.yml
name: Build and Test ASP.NETCore

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Clean artifacts
      run: |
        rm -rf **/bin
        rm -rf **/obj


# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build, test, and deploy an ASP.NET Core web application
# To learn how to migrate your existing application to .NET Core,
# refer to https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
#
# To configure this workflow:
#
# 1. Configure environment variables
# GitHub sets default environment variables for every workflow run.
# Replace the variables relative to your project in the "env" section below.
#
# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for ASP.NET Core,
# refer to https://github.com/actions/setup-dotnet

name: ASP.NET Core CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: ubuntu-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: ASP.NETCore.sln                         # ASP.NET Core solution name
      Test_Project_Path: tests/UnitTests/UnitTests.csproj    # Path to test project
      Project_Path: dotnet-backend/TutorCopiloto.csproj     # Path to main project

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    # Build the application
    - name: Build
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ env.Configuration }} --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test --no-restore --verbosity normal
      env:
        Configuration: ${{ matrix.configuration }}

    # Publish the application
    - name: Publish
      run: dotnet publish ${{ env.Project_Path }} --configuration ${{ env.Configuration }} --no-build --output ./publish
      env:
        Configuration: ${{ matrix.configuration }}

    # Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ASP.NET-Core-App-${{ matrix.configuration }}
        path: ./publish/
